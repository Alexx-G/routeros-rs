var searchIndex = JSON.parse('{\
"routeros_proto":{"doc":"","t":[0,0,3,3,3,4,13,13,11,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,13,13,13,13,13,3,4,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11],"n":["command","reply","Attribute","Command","CommandBuilder","CommandWord","Login","Raw","attribute","attributes","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone_into","command","empty","empty_attribute","eq","fmt","from","from","from","from","into","into","into","into","name","ne","new","new","new_raw","query","query","tag","tag","to_bytes_vec","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","value","Data","Done","Error","Fatal","Other","Reply","ReplyWord","attributes","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","eq","fmt","fmt","from","from","from","from_bytes","into","into","ne","reply","tag","to_owned","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["routeros_proto","","routeros_proto::command","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","routeros_proto::reply","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","It’s an implementation of the command sentence from …","A convenience builder to be used to construct a [Command][…","Common commands for RouterOS API","Login command","Raw command to be sent as is","Add a new command attribute","Command attributes - a list of parameters for the …","","","","","","","","","Build a [command sentence][Command] instance","","","Command word - first word from the command sentence, it …","","Add a new empty command attribute","","","","","","","","","","","","","Create a new builder instance using a [command word][…","","Create a new builder instance using a raw (String-based) […","Add a query attribute to the command","Command query - a list of query parameters that restrict …","Set a tag on the command","Command tag - a special API Attribute that allows …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,1,1,2,3,2,3,4,1,2,3,4,1,2,1,1,3,4,2,1,1,2,3,4,1,2,3,4,1,4,1,2,4,2,2,3,2,3,3,1,2,3,4,1,2,3,4,1,2,3,4,1,4,5,5,5,5,5,0,0,6,6,5,6,5,5,5,5,6,5,6,5,5,6,6,5,5,6,6,5,6,5,6,5,6,5],"f":[null,null,null,null,null,null,null,null,[[["into",8],["string",3]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["command",3]],[[],["commandword",4]],[[]],null,[[["string",3]]],[[["into",8],["string",3]]],[[["commandword",4]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["commandword",4]],["bool",15]],[[["commandword",4]]],[[["option",4],["string",3]]],[[["into",8],["string",3]]],[[["into",8],["string",3]]],null,[[["into",8],["option",4],["string",3]]],null,[[],[["vec",3],["u8",15]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["replyword",4]],[[]],[[["replyword",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["str",15]]],[[],[["result",4],["parseerror",4]]],[[]],[[]],[[["replyword",4]],["bool",15]],null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[4,"CommandWord"],[3,"CommandBuilder"],[3,"Command"],[3,"Attribute"],[4,"ReplyWord"],[3,"Reply"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};