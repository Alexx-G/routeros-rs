var searchIndex = JSON.parse('{\
"routeros_proto":{"doc":"","t":[0,0,0,0,3,3,4,13,13,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,12,3,8,8,11,11,11,11,11,10,11,12,11,10,11,11,11,12,13,13,13,13,13,4,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,13,13,13,13,13,3,3,4,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,12],"n":["command","core","error","reply","Command","CommandBuilder","CommandWord","Login","Raw","attribute","attributes","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","builder","clone","clone_into","command","empty_attribute","eq","fmt","fmt","from","from","from","from","from_bytes_slice","into","into","into","ne","new","new_raw","query","query","tag","tag","to_bytes_vec","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","0","Attribute","Decodable","Encodable","borrow","borrow_mut","empty","fmt","from","from_bytes_slice","into","name","new","to_bytes_vec","try_from","try_into","type_id","value","IncompleteInput","InvalidAttributeFormat","InvalidStringEncoding","InvalidWordLength","MoreThanOneControlWords","ParseError","UnexpectedControlWord","UnknownWordToken","UnsupportedAPIAttribute","UnsupportedReplyAttribute","borrow","borrow_mut","clone","clone_into","eq","fmt","fmt","from","from","into","ne","source","to_owned","to_string","try_from","try_into","type_id","0","0","source","Data","Done","Error","Fatal","Other","Reply","ReplyBuilder","ReplyWord","attribute","attributes","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","builder","clone","clone_into","empty_attribute","eq","fmt","fmt","from","from","from","from","from_bytes_slice","into","into","into","ne","new","reply","tag","tag","to_bytes_vec","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","0"],"q":["routeros_proto","","","","routeros_proto::command","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","routeros_proto::command::CommandWord","routeros_proto::core","","","","","","","","","","","","","","","","","routeros_proto::error","","","","","","","","","","","","","","","","","","","","","","","","","","","routeros_proto::error::ParseError","","","routeros_proto::reply","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","routeros_proto::reply::ReplyWord"],"d":["","","","","It’s an implementation of the command sentence from …","A convenience builder to be used to construct a Command …","Common commands for RouterOS API","Login command","Raw command to be sent as is","Add a new command attribute","Command attributes - a list of parameters for the command. …","","","","","","","Build a command sentence instance","Create a new builder instance to construct a command.","","","Command word - first word from the command sentence, it …","Add a new empty command attribute","","","","","","","","","","","","","Create a new builder instance using a command word","Create a new builder instance using a raw (String-based) …","Add a query attribute to the command","Command query - a list of query parameters that restrict …","Set a tag on the command","Command tag - a special API Attribute that allows …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A convenience builder to be used to construct a Reply …","","Add a new reply attribute","","","","","","","","Build a reply sentence instance","Create a new builder instance to construct a reply.","","","Add a new empty reply attribute","","","","","","","","","","","","","Create a new builder instance using a reply word","","Set a tag on the reply","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,1,1,2,3,2,3,1,2,3,1,2,3,1,1,3,2,1,3,1,2,3,1,1,3,2,3,1,1,2,2,2,3,2,3,3,1,2,3,1,2,3,1,2,3,1,4,0,0,0,5,5,5,5,5,6,5,5,5,7,5,5,5,5,8,8,8,8,8,0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,10,11,12,12,12,12,12,0,0,0,13,14,13,14,12,13,14,12,13,14,12,12,13,12,14,12,13,14,12,12,14,13,14,12,12,13,14,13,14,14,12,13,14,12,13,14,12,13,14,12,15],"f":[null,null,null,null,null,null,null,null,null,[[["string",3],["into",8,["string"]]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["command",3]],[[["commandword",4]],["commandbuilder",3]],[[],["commandword",4]],[[]],null,[[["string",3],["into",8,["string"]]]],[[["commandword",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["str",15]]],[[],[["parseerror",4],["result",4,["parseerror"]]]],[[]],[[]],[[]],[[["commandword",4]],["bool",15]],[[["commandword",4]]],[[["string",3],["into",8,["string"]]]],[[["string",3],["into",8,["string"]]]],null,[[["string",3],["option",4],["into",8,["string"]]]],null,[[],[["vec",3,["u8"]],["u8",15]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,[[]],[[]],[[["string",3]]],[[["formatter",3]],["result",6]],[[]],[[],[["parseerror",4],["result",4,["parseerror"]]]],[[]],null,[[["string",3],["option",4,["string"]]]],[[],[["vec",3,["u8"]],["u8",15]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["parseerror",4]],[[]],[[["parseerror",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["utf8error",3]]],[[]],[[["parseerror",4]],["bool",15]],[[],[["error",8],["option",4,["error"]]]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,[[["string",3],["into",8,["string"]]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["reply",3]],[[["replyword",4]],["replybuilder",3]],[[],["replyword",4]],[[]],[[["string",3],["into",8,["string"]]]],[[["replyword",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["str",15]]],[[]],[[],[["parseerror",4],["result",4,["parseerror"]]]],[[]],[[]],[[]],[[["replyword",4]],["bool",15]],[[["replyword",4]]],null,[[["string",3],["option",4],["into",8,["string"]]]],null,[[],[["vec",3,["u8"]],["u8",15]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null],"p":[[4,"CommandWord"],[3,"CommandBuilder"],[3,"Command"],[13,"Raw"],[3,"Attribute"],[8,"Decodable"],[8,"Encodable"],[4,"ParseError"],[13,"IncompleteInput"],[13,"UnknownWordToken"],[13,"InvalidStringEncoding"],[4,"ReplyWord"],[3,"ReplyBuilder"],[3,"Reply"],[13,"Other"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};